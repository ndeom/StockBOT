{"version":3,"sources":["routes/Home.js","components/Legend.js","components/Scoreboard.js","routes/Game.js","components/controls.js","App.js","serviceWorker.js","index.js"],"names":["Home","id","className","to","Legend","width","height","cx","cy","r","Scoreboard","props","date","Date","time","Intl","DateTimeFormat","format","toString","price","previousPrice","points","playerBuys","playerSells","aiBuys","aiSells","Game","state","speed","data","dataIndex","dataTime","dataPrice","createChart","bind","animateChart","handleClick","handleSlide","createResults","chartRef","React","createRef","fetch","then","response","ok","json","parsedData","JSON","parse","stock","map","d","i","index","filter","setState","chart","this","current","plotData","t","margin","top","right","bottom","left","x","scaleUtc","range","y","scaleLinear","gx","select","append","attr","gy","line","d3Shape","path","dots","selectAll","enter","text","delay","Promise","resolve","setTimeout","currentDomain","slice","length","domain","min","max","call","axisBottom","tickSizeOuter","axisRight","tickSize","tickFormat","w","window","innerWidth","outerWidth","h","innerHeight","outerHeight","centerHeight","centerWidth","playerROI","who","return","aiROI","buy","sell","startingPrice","market","html","sorted","sort","a","b","elem","style","transition","duration","e","console","log","target","textContent","value","ref","onClick","for","onChange","type","step","Component","Controls","App","exact","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"js/main.9fcee33c.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../styles/home.css\";\n\nfunction Home() {\n  return (\n    <div id=\"homeContainer\" className=\"routeContainer\">\n      <h1 id=\"homeTitle\">StockBOT</h1>\n      <br></br>\n      <p>\n        Welcome to StockBOT! You will be pitted against a machine-learning\n        algorithm to see who can get the biggest return on investment. Here's\n        how the game is played:\n      </p>\n      <ol id=\"gameRules\">\n        <li>A random stock and year will be chosen when you press \"Start.\"</li>\n        <li>\n          The graph will start trending, and you can press \"Buy\" to purchse a\n          stock on the current date.\n        </li>\n        <li>\n          Once a stock has been purchased you can sell the stock on the current\n          date by pressing \"Sell,\" or you can hold the stock by not pressing\n          anything and waiting for time to run out.\n        </li>\n        <li>\n          Once time has ended, you will be ranked alongside the machine-learning\n          algorithm and the market.\n        </li>\n        <li>May the best trader win!</li>\n      </ol>\n      <br></br>\n      <Link to=\"/game\">\n        <button id=\"playButton\">Play</button>\n      </Link>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport \"../styles/legend.css\";\n\nfunction Legend() {\n  return (\n    <div id=\"legendContainer\">\n      <h1 id=\"legendTitle\">Legend</h1>\n      <div className=\"legendRow\">\n        <svg className=\"svgCircle\" width=\"14\" height=\"14\">\n          <circle id=\"playerBuyLegend\" cx=\"7\" cy=\"7\" r=\"7\"></circle>\n        </svg>\n        <div className=\"legendText\">Player Buy</div>\n      </div>\n      <div className=\"legendRow\">\n        <svg className=\"svgCircle\" width=\"14\" height=\"14\">\n          <circle id=\"playerSellLegend\" cx=\"7\" cy=\"7\" r=\"7\"></circle>\n        </svg>\n        <div className=\"legendText\">Player Sell</div>\n      </div>\n      <div className=\"legendRow\">\n        <svg className=\"svgCircle\" width=\"16\" height=\"16\">\n          <circle id=\"aiBuyLegend\" cx=\"8\" cy=\"8\" r=\"7\"></circle>\n        </svg>\n        <div className=\"legendText\">AI Buy</div>\n      </div>\n      <div className=\"legendRow\">\n        <svg className=\"svgCircle\" width=\"16\" height=\"16\">\n          <circle id=\"aiSellLegend\" cx=\"8\" cy=\"8\" r=\"7\"></circle>\n        </svg>\n        <div className=\"legendText\">AI Sell</div>\n      </div>\n    </div>\n  );\n}\n\nexport default Legend;\n","import React from \"react\";\nimport \"../styles/scoreboard.css\";\n\nfunction Scoreboard(props) {\n  let date = new Date(props.time);\n  if (typeof props.time === \"number\") {\n    date = new Intl.DateTimeFormat(\"en-US\").format(date);\n  }\n\n  return (\n    <div id=\"scoreboardContainer\">\n      <h1 id=\"scoreboardTitle\">Stats</h1>\n      <h2 className=\"stats\">Current Date</h2>\n      <div className=\"statsText time\">{date.toString()}</div>\n      <h2 className=\"stats\">Current Price</h2>\n      <div className=\"statsGroup\">\n        <svg id=\"trendSVG\" height=\"16\" width=\"16\">\n          <polygon\n            className={`${\n              props.price >= props.previousPrice ? \"trendUp\" : \"trendDown\"\n            }`}\n            points={`${\n              props.price >= props.previousPrice\n                ? \"8,0 16,16 0,16\"\n                : \"0,0 16,0 8,16\"\n            }`}\n          />\n        </svg>\n        <div className=\"statsText price\">{props.price}</div>\n      </div>\n      <h2 className=\"stats\">Player Buy</h2>\n      <div className=\"statsText price buy\">{props.playerBuys.price}</div>\n      <h2 className=\"stats\">Player Sell</h2>\n      <div className=\"statsText price sell\">{props.playerSells.price}</div>\n      <h2 className=\"stats\">AI Buy</h2>\n      <div className=\"statsText price buy\">\n        {props.time >= props.aiBuys.time ? props.aiBuys.price : \"\"}\n      </div>\n      <h2 className=\"stats\">AI Sell</h2>\n      <div className=\"statsText price sell\">\n        {props.time >= props.aiSells.time ? props.aiSells.price : \"\"}\n      </div>\n    </div>\n  );\n}\n\nexport default Scoreboard;\n","import React from \"react\";\nimport \"../styles/game.css\";\nimport Legend from \"../components/Legend.js\";\nimport Scoreboard from \"../components/Scoreboard.js\";\nimport { scaleLinear, scaleUtc } from \"d3-scale\";\nimport { max, min } from \"d3-array\";\nimport { select } from \"d3-selection\";\nimport { axisBottom, axisRight } from \"d3-axis\";\nimport * as d3Shape from \"d3-shape\";\nimport { format } from \"d3-format\";\nimport {} from \"d3-transition\";\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      speed: 0.5,\n      data: null,\n      dataIndex: 0,\n      dataTime: \"\",\n      dataPrice: \"\",\n      previousPrice: \"\",\n      playerBuys: {\n        time: \"\",\n        price: \"\",\n      },\n      playerSells: {\n        time: \"\",\n        price: \"\",\n      },\n      aiBuys: {\n        time: \"\",\n        price: \"\",\n      },\n      aiSells: {\n        time: \"\",\n        price: \"\",\n      },\n    };\n    this.createChart = this.createChart.bind(this);\n    this.animateChart = this.animateChart.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleSlide = this.handleSlide.bind(this);\n    this.createResults = this.createResults.bind(this);\n    this.chartRef = React.createRef();\n  }\n\n  componentDidMount() {\n    fetch(\"/data\").then((response) => {\n      if (response.ok) {\n        response.json().then((data) => {\n          const parsedData = {\n            data: JSON.parse(data.data),\n            stock: data.stock,\n          };\n\n          // Grab AI buys and sells and store them in state\n\n          const aiBuys = parsedData.data.data\n            .map((d, i) => {\n              if (d[1] === 1 && !this.state.aiBuys.time) {\n                return {\n                  time: parsedData.data.index[i],\n                  price: d[0],\n                };\n              }\n            })\n            .filter((d) => {\n              if (d) return d;\n            });\n\n          const aiSells = parsedData.data.data\n            .map((d, i) => {\n              if (d[1] === -1 && !this.state.aiSells.time) {\n                return {\n                  time: parsedData.data.index[i],\n                  price: d[0],\n                };\n              }\n            })\n            .filter((d) => {\n              if (d && d.time > aiBuys[0].time) return d;\n            });\n\n          this.setState(\n            {\n              data: parsedData,\n              dataTime: parsedData.data.index[0],\n              aiBuys: aiBuys[0] ? aiBuys[0] : \"\",\n              aiSells: aiSells[0] ? aiSells[0] : \"\",\n            },\n            this.createChart\n          );\n        });\n      }\n    });\n  }\n\n  /*componentDidUpdate() {\n    this.animateChart();\n  }*/\n\n  createChart() {\n    const chart = this.chartRef.current;\n    const { data, stock } = this.state.data;\n    const plotData = data.index.map((t, i) => [t, data.data[i]]);\n    const margin = { top: 50, right: 0, bottom: 50, left: 0 };\n    const width = 1000;\n    const height = 600;\n\n    // Create axes for chart\n    const x = scaleUtc().range([margin.left, width - margin.right]);\n\n    const y = scaleLinear().range([margin.top, height - margin.bottom]);\n\n    const gx = select(chart)\n      .append(\"g\")\n      .attr(\"id\", \"xAxis\")\n      .attr(\"transform\", \"translate(0, \" + (height - margin.bottom) + \")\");\n\n    const gy = select(chart)\n      .append(\"g\")\n      .attr(\"id\", \"yAxis\")\n      .attr(\"transform\", \"translate(\" + margin.left + \", 0)\");\n\n    //Create line for chart\n    const line = d3Shape\n      .line()\n      .x((d) => x(d[0]))\n      .y((d) => y(d[1][0]));\n\n    const path = select(chart).append(\"path\").attr(\"id\", \"path\");\n\n    const dots = select(chart)\n      .selectAll(\"circle\")\n      .data(plotData)\n      .enter()\n      .append(\"circle\")\n      .attr(\"cx\", (d) => x(d[0]))\n      .attr(\"cy\", (d) => y(d[1][0]));\n\n    const title = select(chart)\n      .append(\"text\")\n      .attr(\"id\", \"chartTitle\")\n      .attr(\"x\", width / 2 - 60)\n      .attr(\"y\", margin.top)\n      .text(`${stock}`);\n\n    // ADD ALL NECESSARY VARIABLES TO PASS AND THEN ADD\n    // animateChart() TO componentDidUpdate()\n    this.animateChart(\n      chart,\n      x,\n      y,\n      gx,\n      gy,\n      line,\n      path,\n      dots,\n      margin,\n      width,\n      height\n    );\n  }\n\n  async animateChart(\n    chart,\n    x,\n    y,\n    gx,\n    gy,\n    line,\n    path,\n    dots,\n    margin,\n    width,\n    height\n  ) {\n    const { data, stock } = this.state.data;\n    const plotData = data.index.map((t, i) => [t, data.data[i]]);\n    const delay = (t) => new Promise((resolve) => setTimeout(resolve, t));\n\n    let i;\n\n    //async function changeDomain() {\n    for (i = 0; i < plotData.length; i++) {\n      //Create transition\n      //const transition = select(chart).transition().duration(400);\n\n      //Adjust domain to current index\n      const currentDomain = plotData.slice(0, i + 1);\n\n      this.setState((state) => {\n        return {\n          dataIndex: i,\n          dataTime: currentDomain[currentDomain.length - 1][0],\n          dataPrice: currentDomain[currentDomain.length - 1][1][0],\n          previousPrice: state.dataPrice,\n        };\n      });\n\n      x.domain([min(plotData, (d) => d[0]), plotData[i][0]]);\n      y.domain([\n        max(currentDomain, (d) => d[1][0]) + 5,\n        min(currentDomain, (d) => d[1][0]) - 5,\n      ]);\n      //Update axes and path\n      gx.call(axisBottom(x).tickSizeOuter(0));\n      gy.call(\n        axisRight(y)\n          .tickSize(width - margin.left - margin.right)\n          .tickFormat(format(\".2f\"))\n      );\n      path.attr(\"d\", line(plotData));\n\n      dots\n        .attr(\"cx\", (d) => x(d[0]))\n        .attr(\"cy\", (d) => y(d[1][0]))\n        .attr(\"class\", (d) => {\n          if (d[0] === this.state.playerBuys.time) return \"dot playerBuy\";\n          if (\n            d[0] === this.state.playerSells.time &&\n            this.state.playerBuys.time\n          )\n            return \"dot playerSell\";\n          if (d[0] === this.state.aiBuys.time) return \"dot aiBuy\";\n          if (d[0] === this.state.aiSells.time && this.state.aiBuys.time)\n            return \"dot aiSell\";\n          return \"dot\";\n        })\n        .attr(\"r\", 7);\n\n      await delay((1 - this.state.speed) * 1000);\n    }\n    this.createResults();\n  }\n\n  createResults() {\n    const wResults = 400;\n    const hResults = 300;\n    const w = (window.innerWidth + window.outerWidth) / 2;\n    const h = (window.innerHeight + window.outerHeight) / 2;\n    const centerHeight = (h - hResults) / 2;\n    const centerWidth = (w - wResults) / 2;\n\n    let playerROI = {\n      who: \"Player\",\n      return: 0,\n    };\n    let aiROI = {\n      who: \"AI\",\n      return: 0,\n    };\n    if (this.state.playerBuys.price) {\n      let buy = this.state.playerBuys.price;\n      let sell = this.state.playerSells.price\n        ? this.state.playerSells.price\n        : this.state.dataPrice;\n      playerROI.return = (sell - buy) / buy;\n    }\n\n    if (this.state.aiBuys.price) {\n      let buy = this.state.aiBuys.price;\n      let sell = this.state.aiSells.price\n        ? this.state.aiSells.price\n        : this.state.dataPrice;\n      aiROI.return = (sell - buy) / buy;\n    }\n\n    let startingPrice = this.state.data.data.data[0][0];\n    let market = {\n      who: \"Market\",\n      return: (this.state.dataPrice - startingPrice) / startingPrice,\n    };\n\n    select(\"#chartContainer\")\n      .append(\"div\")\n      .html(() => {\n        let sorted = [playerROI, aiROI, market]\n          .sort((a, b) => b.return - a.return)\n          .map((elem) => {\n            elem.return = format(\".2%\")(elem.return);\n            return elem;\n          });\n        return `<div id=\"resultsTitle\">Results:</div><br><br>\n           1. ${sorted[0].who}: ${sorted[0].return} <br>\n           2. ${sorted[1].who}: ${sorted[1].return} <br>\n           3. ${sorted[2].who}: ${sorted[2].return}`;\n      })\n      .attr(\"id\", \"resultsHTML\")\n      .style(\"top\", h * 2 + \"px\")\n      .style(\"left\", centerWidth + \"px\")\n      .transition()\n      .duration(1000)\n      .style(\"top\", centerHeight + \"px\")\n      .style(\"left\", centerWidth + \"px\");\n  }\n\n  handleClick(e) {\n    console.log(\"e.target button: \", e.target.textContent);\n    if (e.target.textContent === \"Buy\" && !this.state.playerBuys.time) {\n      console.log(\"state set to BUY\");\n      this.setState((state) => {\n        return {\n          playerBuys: {\n            time: state.data.data.index[state.dataIndex],\n            price: state.data.data.data[state.dataIndex][0],\n          },\n        };\n      }, console.log(this.state));\n    }\n    if (\n      e.target.textContent === \"Sell\" &&\n      this.state.playerBuys.time &&\n      !this.state.playerSells.time\n    ) {\n      console.log(\"state set to SELL\");\n      this.setState((state) => {\n        return {\n          playerSells: {\n            time: state.data.data.index[state.dataIndex],\n            price: state.data.data.data[state.dataIndex][0],\n          },\n        };\n      }, console.log(this.state));\n    }\n  }\n\n  handleSlide(e) {\n    console.log(\"inside handleSlide\");\n    console.log(\"e.target.value:\", e.target.value);\n    this.setState({\n      speed: e.target.value,\n    });\n  }\n\n  render() {\n    return (\n      <div id=\"chartContainer\">\n        <div className=\"col\" id=\"col1\">\n          <Scoreboard\n            time={this.state.dataTime}\n            price={this.state.dataPrice}\n            previousPrice={this.state.previousPrice}\n            playerBuys={this.state.playerBuys}\n            playerSells={this.state.playerSells}\n            aiBuys={this.state.aiBuys}\n            aiSells={this.state.aiSells}\n          />\n        </div>\n        <div className=\"col\" id=\"col2\">\n          <svg\n            id=\"chart\"\n            ref={this.chartRef}\n            width={\"1000px\"}\n            height={\"600px\"}\n          ></svg>\n          <div id=\"controlsContainer\">\n            <button\n              onClick={this.handleClick}\n              id=\"buyButton\"\n              className=\"button\"\n            >\n              Buy\n            </button>\n            <div id=\"slideContainer\">\n              <label for=\"slider\" id=\"sliderLabel\">\n                Speed\n              </label>\n              <input\n                onChange={this.handleSlide}\n                type=\"range\"\n                min=\"0\"\n                max=\"1\"\n                step=\"0.1\"\n                value={this.state.speed}\n                id=\"slider\"\n              />\n            </div>\n            <button\n              onClick={this.handleClick}\n              id=\"sellButton\"\n              className=\"button\"\n            >\n              Sell\n            </button>\n          </div>\n        </div>\n        <div className=\"col\" id=\"col3\">\n          <Legend />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React from \"react\";\n\nfunction Controls(props) {\n  return (\n    <div id=\"controlsContainer\">\n      <button id=\"buyButton\" className=\"button\">\n        Buy\n      </button>\n      <input type=\"range\" min=\"0\" max=\"1\" value=\"0.5\" id=\"slider\"></input>\n      <button id=\"sellButton\" className=\"button\">\n        Sell\n      </button>\n    </div>\n  );\n}\n\nexport default Controls;\n","import React from \"react\";\nimport \"./App.css\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Home from \"./routes/Home.js\";\nimport Game from \"./routes/Game.js\";\nimport Controls from \"./components/controls.js\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\"></header>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/game\">\n            <Game />\n          </Route>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}